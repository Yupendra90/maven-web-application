pipeline{
agent any
tools{
        maven 'maven3.8.6'
}
options {
  timestamps()
   buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')
}
triggers {
  pollSCM ('* * * * *')
}

stages{
stage('checkoutcode') {
steps{
     slackNotifications('STARTED')
git branch: 'development', credentialsId: '515da19b-bdfc-4706-88ab-f19c82508c58', url: 'https://github.com/Yupendra90/maven-web-application.git'  
}
}
stage('BuildPackage'){
steps{
sh "mvn clean package"
}
}
stage('ExecuteSonarQubeReport'){
steps{
sh "mvn clean sonar:sonar"
}
}
stage('UploadArtifactIntoRepos'){
steps{
sh "mvn clean deploy"
}
}
stage('DeployToContainer'){
steps{
    sshagent(['8dcad4b6-4a21-40de-a24c-15fb9e794f1d']) {
        sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.4.225:/opt/apache-tomcat-9.0.74/webapps/"
}
}
}
} //stages close
post {
  success {
            slackNotifications(currentBuild.result)
  }
  failure {
          slackNotifications(currentBuild.result)  
  }
}

} //pipeline close

//slack notification 
def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
